# -*- coding: utf-8 -*-
"""vois_airbnb_mohammed_altaf.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14ePdBlQ4n1yF2I__b4pzOSqpm5CLt51Q
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import plotly.express as px

df = pd.read_csv('/content/1730285881-Airbnb_Open_Data.csv', low_memory=False)

df.head()

df.info()

df.duplicated().value_counts()

df[df['neighbourhood group'] == 'brookln']

df.duplicated().value_counts()

df.drop_duplicates(inplace=True)

df.info()

df.drop(['house_rules' , 'license'],inplace=True,axis=1)

df['price'] = df['price'].str.replace('$','',regex=False)

df['service fee']=df['service fee'].str.replace('$','',regex=False)

df['price'] =df['price'].str.replace(',','',regex=False)

df['service fee']=df['service fee'].str.replace(',','',regex=False)

df.rename(columns= {
    'price' : 'price_$',
    'service fee' : 'service fee_$'
},inplace=True)

df.dropna(inplace=True)

df['price_$'] = df['price_$'].astype(float)

df['service fee_$'] = df['service fee_$'].astype(float)

df['id'] = df['id'].astype(str)

df['host id'] = df['host id'].astype(str)

df['last review'] = pd.to_datetime(df['last review'])

df['Construction year'] = df['Construction year'].astype(int)

df.loc[df['neighbourhood group']== 'brookln','neighbourhood group'] = 'Brooklyn'

df = df.drop(df[df['availability 365']>500].index)

df.duplicated().value_counts()

df.info()

df.describe()

property_types = df['room type'].value_counts().to_frame()
property_types

room_type_bar = plt.bar(property_types.index, property_types.loc[:,"count"]);
plt.ylim([0,50000]);
plt.xlabel('Room Type');
plt.ylabel('Room type Count');
plt.title('Property Types and their count in the dataset');
plt.bar_label(room_type_bar,labels = property_types.loc[:,"count"],padding=4);

hood_group = df['neighbourhood group'].value_counts().to_frame()
hood_group

hood_group_bar = plt.bar(hood_group.index, hood_group.loc[:,"count"]);
plt.bar_label(hood_group_bar,labels = hood_group.loc[:,"count"],padding=4);
plt.ylim([0,40000]);
plt.xlabel('Neighbourhood Group');
plt.ylabel('Number of listenings');
plt.title('Neighbourhood Group and their count in the dataset');
plt.xticks(rotation=45);

avg_price = df.groupby('neighbourhood group')['price_$'].mean().sort_values(ascending = False).to_frame()
avg_price_bar = plt.bar(avg_price.index, avg_price.loc[:,"price_$"]);
plt.bar_label(avg_price_bar,labels = round(avg_price.loc[:,"price_$"],2),label_type ='edge',padding=4);
plt.ylim([0,700]);
plt.xlabel('Neighbourhood Group');
plt.ylabel('Average Price');
plt.title('Average Price per Listening ($) in each Neighbourhood Group');
plt.xticks(rotation=45);

df.groupby(df['Construction year'])['price_$'].mean().to_frame().plot();
plt.xlabel('Construction year');
plt.ylabel('Average Price');
plt.title('Average Price per Construction year');

hosts = df.groupby('host name')['calculated host listings count'].sum().sort_values(ascending = False).nlargest(10).to_frame()
hosts_bar = plt.bar(hosts.index, hosts.loc[:,"calculated host listings count"]);
plt.bar_label(hosts_bar,label = hosts.loc[:,"calculated host listings count"],label_type='edge' ,padding=3);
plt.xlabel('Host name');
plt.ylabel('calculated host listings count');
plt.xticks(rotation=80)
plt.ylim([0,120000]);
plt.title('Host name and their calculated host listings count')

review =df.groupby('host_identity_verified')['number of reviews'].mean().sort_values(ascending=False).to_frame()
review

review_bar = plt.bar(review.index, review.loc[:,"number of reviews"]);
plt.bar_label(review_bar,label = round(review.loc[:,"number of reviews"],2),padding=4);
plt.ylim(0,100)
plt.xlabel('Host identity verified');
plt.ylabel('Number of reviews');
plt.title('Host identity verified and their number of reviews');

base_color=sns.color_palette()[0]
sns.boxplot(data =df,x='host_identity_verified', y="review rate number",color=base_color);
plt.xlabel('Host identity verified');
plt.ylabel('Review rate number');
plt.title('Host identity verified and their review rate number');

df['price_$'].corr(df['service fee_$'])
sns.regplot(df,x='price_$',y='service fee_$');
plt.xlabel('Price');
plt.ylabel('Service fee');
plt.title('Price and service fee correlation')

ARRN  =df.groupby(['neighbourhood group','room type'])['review rate number'].mean().to_frame()

ARRN

plt.figure(figsize =[12,10]);
sns.barplot(data=df,x='neighbourhood group',y='review rate number',hue='room type');
plt.xlabel('Neighbourhood group');
plt.ylabel('Review rate number');
plt.title('Average review rate number per room type in each neighbourhood group');

sns.regplot(df,x='calculated host listings count' , y='availability 365');
plt.xlabel('Calculated host listening count');
plt.ylabel('Availabililty 365');
plt.title('Calculated host listening count and availabililty 365 correlation');

df['calculated host listings count'].corr(df['availability'])

